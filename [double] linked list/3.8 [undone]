#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct Node
{
    int data;
    struct Node * next;
};

void add_first(struct Node ** head, int data)
{
    struct Node * tmp = malloc(sizeof(struct Node));
    tmp->data = data;
    tmp->next = *head;
    *head = tmp;
}

void add_last(struct Node ** head, int data)
{
    struct Node * tmp = malloc(sizeof(struct Node));
    struct Node * ptr = *head;
    tmp->data = data;
    tmp->next = NULL;
    if(*head == NULL){
        *head = tmp;
        return;
    }
    while (ptr->next != NULL)
    {
        ptr = ptr->next;
    }
    ptr->next = tmp;
    return;
}

void print(struct Node * head)
{
    struct Node * tmp = head;
    while (tmp != NULL)
    {
        printf("%d -> ", tmp->data);
        tmp = tmp->next;
    }
    printf("\n");
}

struct Node * merge(struct Node * h1, struct Node * h2)
{
    struct Node * tmp1 = h1;
    struct Node * tmp2 = h2;
    struct Node * result = NULL;
    if (tmp1 == NULL && tmp2 == NULL)
    {
        return result;
    }
    if (tmp1 == NULL)
    {
        return tmp2;
    }
    if (tmp2 == NULL)
    {
        return  tmp1;
    }
    while (tmp1 != NULL && tmp2 != NULL)
    {
        if (tmp1->data > tmp2->data)
        {
            add_last(&result, tmp2->data);
            tmp2 = tmp2->next;
        }
        if (tmp2 == NULL)
        {
            while (tmp1 != NULL)
            {
                add_last(&result, tmp1->data);
                tmp1 = tmp1->next;
            }
        }
        if (tmp1->data < tmp2->data)
        {
            add_last(&result, tmp1->data);
            tmp1 = tmp1->next;
        }
        if (tmp1 ==NULL)
        {
            while (tmp2 != NULL)
            {
                add_last(&result, tmp2->data);
                tmp2 = tmp2->next;
            }
        }
        //спросить почему нельзя if (tmp1->data == tmp2->data && tmp1 == NULL)
        if (tmp1 == NULL && tmp2 == NULL)
        {
            break;
        }
        if (tmp1->data == tmp2->data)
        {
            add_last(&result, tmp1->data);
            tmp1 = tmp1->next;
            tmp2 = tmp2->next;
        }
    }
    return result;
}

int main()
{
    struct Node * head1 = NULL;
    add_first(&head1, 26);
    add_first(&head1, 12);
    add_first(&head1, 7);
    add_first(&head1, 3);
    add_first(&head1, 1);

    struct Node * head2 = NULL;
    add_first(&head2, 55);
    add_first(&head2, 24);
    add_first(&head2, 14);
    add_first(&head2, 8);
    add_first(&head2, 5);
    add_first(&head2, 4);

    print(head1);
    print(head2);

    struct Node * new = merge(head1, head2);
    print(new);
    return 0;
}
