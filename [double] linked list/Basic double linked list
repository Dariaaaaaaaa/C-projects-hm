#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

struct Node{
    int data;
    struct Node * next;
    struct Node *prev;
};

void push( struct Node ** head, int x )
{
    struct Node * tmp = (struct Node*)malloc(sizeof (struct Node *));
    tmp->data = x;
    tmp->next = *head;
    tmp->prev = NULL;
    *head = tmp;
}

bool empty( struct Node * head )
{
    if (head == NULL)
    {
        return true;
    }
    return false;
}

struct Node * pop( struct Node ** head )
{
    struct Node * tmp = * head;
    if (*head == NULL)
    {
        printf("No return, stack empty :(");
        return NULL;
    }
    *head = (*head)->next;
    (*head)->prev = NULL;
    tmp->next = NULL;
    tmp->prev = NULL;
    return tmp;
}

void printStack(struct Node * head)
{
    struct Node * tmp = head;
    while (tmp->next != NULL)
    {
        printf("%d <-> ", tmp->data);
        tmp = tmp->next;
    }
    printf("%d \n", tmp->data);
    return;
}

int main()
{
    struct Node * example;
    example = NULL;
    push(&example, 25);
    push(&example, 76);
    push(&example, 10);
    printStack(example);

    struct Node * x = pop(&example);
    printStack(x);
    printStack(example);

    if(empty(x))
    {
        printf("Oh no, stack x is empty");
    }

    struct Node * y = NULL;
    if(empty(y))
    {
        printf("Oh no, stack y is empty");
    }

    return 0;
}
