#include <stdio.h>
#include <stdlib.h>

struct Node
{
    int data;
    struct Node * next;
};

void add_fisrt(struct Node ** head, int data)
{
    struct Node * tmp = malloc(sizeof(struct Node));
    tmp->data = data;
    tmp->next = *head;
    *head = tmp;
}

void print(struct Node * head)
{
    struct Node * tmp = head;
    while (tmp != NULL)
    {
        printf("%d -> ", tmp->data);
        tmp = tmp->next;
    }
    printf("\n");
}

struct Node * copy (struct Node * org)
{
    struct Node * copied, *last_node;
    while (org != NULL)
    {
        struct Node * tmp = (struct Node *)malloc(sizeof(struct Node));
        tmp->data = org->data;
        tmp->next = NULL;
        
        if (copied == NULL) 
        {
            copied = tmp;
            last_node = copied;
        }
        else
        {
            last_node->next = tmp;
            last_node = tmp;
        }
        org = org->next;
    }
    return copied;
}

struct Node *copy_rec (struct Node * org)
{
    if (org == NULL)
    {
        return NULL;
    }
    struct Node *tmp = (struct Node *)malloc(sizeof(struct Node));
    tmp->data = org->data;
    tmp->next = copy_rec(org->next);
    return tmp;
}

int main()
{
    struct Node * head = NULL;
    for (int i = 0; i < 10; i++)
    {
        add_fisrt(&head, i);
    }
    
    print(head);
    
    struct Node * copy1 = copy(head);
    print(copy1);
    struct Node * copy2 = copy_rec(head);
    print(copy2);
    return 0;
}
